slug: vault-basics
id: likpqjspv5pp
type: track
title: Vault Basics
teaser: Learn how to setup and run some basic Vault CLI commands.
description: |-
  Vault is a tool for securely accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, or certificates. Vault provides a unified interface to any secret, while providing tight access control and recording a detailed audit log.

  Vault tightly controls access to secrets by authenticating against trusted sources of identity such as Active Directory, LDAP, Kubernetes, CloudFoundry, and cloud platforms. Vault enables fine grained authorization of which users and applications are permitted access to secrets.

  We invite you to join the ranks of the Vault community today!

  This track will introduce you to Vault open source, starting with the Vault CLI and running a Vault dev server.
icon: https://storage.googleapis.com/instruqt-frontend/assets/hashicorp/tracks/vault.png
tags:
- vault
- basics
owner: hashicorp
developers:
- roger@hashicorp.com
private: true
published: true
challenges:
- slug: hello-vault
  id: 5ilfhojx2vup
  type: challenge
  title: Getting to Know Vault
  teaser: Learn Vault basics and command line syntax.
  assignment: |-
    Let's get started with some basic vault commands.

    You can run the following commands in the "Vault CLI" terminal on the left.

    Check the version of Vault running on your machine:
    ```
    vault version
    ```

    You can always get help if you're curious about command syntax:
    ```
    vault help
    ```

    Now, try running a Vault dev server in the "Vault Dev Server" tab:
    ```
    vault server -dev -dev-listen-address=0.0.0.0:8200
    ```
    Note that we are instructing the Vault server to bind to all IP addresses so that we can access it with the Vault UI which is running in a different container.

    Try logging into the Vault UI with the token `root`.

    Write a secret to KV v2 secrets engine that the Vault dev server automatically mounted for you in the "Vault CLI" tab:
    ```
    vault kv put secret/my-first-secret age=<age>
    ```
    where <age> is your age.

    In the Vault UI, select the `secret` secrets engine, select the `my-first-secret` secret, and click the eye icon to see your age.

    If you lied about your age, you can correct it in the Vault UI or repeat the `vault kv put` command with your real age. Don't worry, nobody else can see it!
  notes:
  - type: text
    contents: |-
      Vault open source is a command line application that you can download and run from your laptop or virtual workstation.

      It is written in Go and runs on Mac OSX, Linux or Windows. You can always download the latest version of vault here:

      https://www.vaultproject.io/downloads.html
  - type: text
    contents: |-
      Installing Vault on your laptop or workstation is easy. You simply download the zip file, unpack it, and place it somewhere in your PATH.

      Check out this tutorial for step-by-step instructions:

      https://learn.hashicorp.com/vault/getting-started/install

      We've pre-installed Vault in your Instruqt lab environment for you so that you can run a Vault dev server.
  tabs:
  - title: Vault CLI
    type: terminal
    hostname: vault-cli
  - title: Vault Dev Server
    type: terminal
    hostname: vault-cli
  - title: Vault UI
    type: service
    hostname: vault-cli
    port: 8200
  difficulty: basic
  timelimit: 3600
checksum: "10578150579592432691"
